///////////////////////////////////////////////////////////////////////////////
// Copyright 2019 Galois, Inc. All Rights Reserved
//
// Authored by Galois, Inc. (saw@galois.com)
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
//
//  http://aws.amazon.com/apache2.0
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//
///////////////////////////////////////////////////////////////////////////////

module abstract_spec::types where

import abstract_spec::vectors
import abstract_spec::ring
import abstract_spec::parameters as P

///////////////////////////////////////////////////////////////////////////////

type private_key = (R_polynomial P::r, R_polynomial P::r)
type public_key = (R_polynomial P::r, R_polynomial P::r)
type cryptogram = (R_polynomial P::r, R_polynomial P::r)

type shared_key = [P::ell_k]

private_key_matrix: private_key -> matrix P::r P::n
private_key_matrix (h0,h1) = block_matrix [H0, H1] where
  H0 = phi_inverse_matrix (T_polynomial h0)
  H1 = phi_inverse_matrix (T_polynomial h1)
