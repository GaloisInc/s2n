///////////////////////////////////////////////////////////////////////////////
// Copyright 2019 Galois, Inc. All Rights Reserved
//
// Authored by Galois, Inc. (saw@galois.com)
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
//
//  http://aws.amazon.com/apache2.0
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Specifications

let compute_slice_len_spec = do {
    la <- crucible_fresh_var "la" i64;
    crucible_precond {{ la == 8188 }};
    crucible_execute_func [tm la];
    let alpha = eval_int {{
        (((`8188 / `(MAX_MB_SLICES)) -
        `(SLICE_REM)) / `(HASH_BLOCK_SIZE)):[64] }};
    crucible_return (tm {{ ((`alpha * `HASH_BLOCK_SIZE) + `SLICE_REM):[64] }});
};

///////////////////////////////////////////////////////////////////////////////
// Proof commands

compute_slice_len_ov <- verify "compute_slice_len" [] (compute_slice_len_spec);
