///////////////////////////////////////////////////////////////////////////////
// Copyright 2019 Galois, Inc. All Rights Reserved
//
// Authored by Galois, Inc. (saw@galois.com)
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
//
//  http://aws.amazon.com/apache2.0
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Proof commands

// NOTE: The following is a two part proof. See the explanation in
//       bike_l1_kem.saw

// NOTE: Step 1 of 2 - non-success result
crypto_kem_dec_unsuccessful_ov <- verify_unint "BIKE1_L1_crypto_kem_dec"
    [ compute_syndrome_update_ov
    , secure_clean_124_e_ov
    , secure_clean_124_syndrome_ov
    , get_ss_ov, get_seeds_ov
    , count_ones_N_SIZE_ov
    , decode_op_ov, printf_chk_ov]
    [ "decode", "compute_syndrome", "compute_syndrome_update"
    , "get_ss", "count_ones", "is_bounded_compressed_idx_dv" ]
    crypto_kem_dec_unsuccessful_spec;

// NOTE: Step 2 of 2 - conditioned on a SUCCESS result
crypto_kem_dec_successful_ov <- verify_unint "BIKE1_L1_crypto_kem_dec"
    [compute_syndrome_update_ov
    , secure_clean_124_e_ov
    , secure_clean_124_syndrome_ov
    , get_ss_ov, get_seeds_ov
    , count_ones_N_SIZE_ov
    , decode_op_ov, printf_chk_ov]
    [ "decode", "compute_syndrome", "compute_syndrome_update"
    , "get_ss", "count_ones", "is_bounded_compressed_idx_dv" ]
    crypto_kem_dec_successful_spec;


